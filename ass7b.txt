import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('newfb.csv')
df
df = df.drop_duplicates()
df
df.isna().sum()
sns.set(style='whitegrid')
# 1. Bar Plot: Types of Posts vs Total Interactions

sns.barplot(x='Type', y='Total Interactions', data=df)
plt.xlabel('Post Type')
plt.ylabel('Total Interactions')
plt.title('Bar Plot: Types of Posts vs Total Interactions')
plt.show()

# 2. Line Plot: Post Month vs Lifetime Post Total Reach

sns.lineplot(x='Post Month', y='Lifetime Post Total Reach', data=df)
plt.xlabel('Post Month')
plt.ylabel('Lifetime Post Total Reach')
plt.title('Line Plot: Post Month vs Lifetime Post Total Reach')
plt.show()

# 3. Scatter Plot: Lifetime Post Consumers vs Lifetime Post Total Impressions

sns.scatterplot(x='Lifetime Post Consumers', y='Lifetime Post Total Impressions', data=df)
plt.xlabel('Lifetime Post Consumers')
plt.ylabel('Lifetime Post Total Impressions')
plt.title('Scatter Plot: Lifetime Post Consumers vs Lifetime Post Total Impressions')
plt.show()
# 4. Box Plot: Post Weekday vs Lifetime Engaged Users

sns.boxplot(x='Post Weekday', y='Lifetime Engaged Users', data=df)
plt.xlabel('Post Weekday')
plt.ylabel('Lifetime Engaged Users')
plt.title('Box Plot: Post Weekday vs Lifetime Engaged Users')
plt.show()
# 5. Histogram: Post Hour Distribution

plt.hist(df['Post Hour'], bins=24, edgecolor='black')
plt.xlabel('Post Hour')
plt.ylabel('Frequency')
plt.title('Histogram: Post Hour Distribution')
plt.show()
# 6. KDE Plot: Distribution of Lifetime Post Consumptions by Paid status

sns.kdeplot(data=df, x='Lifetime Post Consumptions', hue='Paid', fill=True)
plt.xlabel('Lifetime Post Consumptions')
plt.ylabel('Density')
plt.title('KDE Plot: Distribution of Lifetime Post Consumptions by Paid status')
plt.legend(title='Paid')
plt.show()
# 7. Pair Plot: Pairwise relationships with scatter plots and histograms

sns.pairplot(df[['Lifetime Post Total Reach', 'Lifetime Post Total Impressions', 'Lifetime Engaged Users', 'Lifetime Post Consumers', 'Lifetime Post Consumptions']])
plt.suptitle('Pair Plot: Pairwise Relationships', y=1.02)
plt.show()
# 8. Heatmap: Correlation between numerical attributes

sns.heatmap(df[['Lifetime Post Total Reach', 'Lifetime Post Total Impressions', 'Lifetime Engaged Users', 'Lifetime Post Consumers', 'Lifetime Post Consumptions', 'Total Interactions']].corr(), annot=True, cmap='coolwarm')
plt.title('Heatmap: Correlation between Numerical Attributes')
plt.show()
# Pie Chart: Distribution of Post Types
post_type_counts = df['Type'].value_counts()
plt.figure(figsize=(8, 8))
plt.pie(post_type_counts, labels=post_type_counts.index, autopct='%1.1f%%', startangle=140)
plt.title('Pie Chart: Distribution of Post Types')
plt.show()
# Create a violin plot with hue based on Type and split by Paid status

sns.violinplot(x='Type', y='Total Interactions', hue='Paid', data=df, split=True, inner='quart')
plt.xlabel('Post Type')
plt.ylabel('Total Interactions')
plt.title('Violin Plot: Total Interactions by Post Type and Paid Status')
plt.legend(title='Paid', loc='upper right')
plt.show()
